import pandas as pd
from collections import defaultdict
from typing import List, Dict, Any
import streamlit as st

def generate_exposure_report_data(analysis_results: List[Dict[str, Any]]) -> Dict[str, Any]:
    """
    Generates a summary report of PII exposure from analysis results.

    Args:
        analysis_results (list): A list of dictionaries from PIIExposureAnalyzer's analyze_all_records.

    Returns:
        dict: A dictionary containing the report with summaries and examples.
    """
    missed_pii_summary = defaultdict(int)
    partially_exposed_summary = defaultdict(int)
    fully_exposed_summary = defaultdict(int)
    exposed_pii_examples = {}

    if not analysis_results:
        return {
            "missed_pii_summary": {},
            "partially_exposed_summary": {},
            "fully_exposed_summary": {},
            "exposed_pii_examples": {},
        }

    
    for record_analysis in analysis_results:
        # Ground truth PII for this record
        ground_truth = record_analysis.get('ground_truth_pii', {})
        pii_data = dict(zip(ground_truth.get('fields_used', []), ground_truth.get('raw_values', [])))

        exposed_fields = record_analysis.get('exposed_fields', {})
        
        # 1. Identify Missed PII
        # PII that was in the original data but NOT found as exposed.
        # This means it was either correctly anonymized or not present in the anonymized text.
        for field_name in pii_data:
            if field_name not in exposed_fields:
                missed_pii_summary[field_name] += 1

        # 2. Summarize Partially and Fully Exposed PII
        for field_name, exposure_info in exposed_fields.items():
            exposure_level = exposure_info.get('exposure_level')
            original_value = exposure_info.get('original_value', '')
            
            if exposure_level == 'PARTIAL_EXPOSURE':
                partially_exposed_summary[field_name] += 1
                # Add an example if one doesn't already exist for this PII type
                if field_name not in exposed_pii_examples:
                    exposed_pii_examples[field_name] = {
                        "text": original_value,
                        "context": record_analysis.get('original_text', ''),
                        "type": "Partial"
                    }
            
            elif exposure_level == 'FULL_EXPOSURE':
                fully_exposed_summary[field_name] += 1
                # Full exposure examples are more critical, so they can overwrite partial ones
                exposed_pii_examples[field_name] = {
                    "text": original_value,
                    "context": record_analysis.get('original_text', ''),
                    "type": "Full"
                }

    report = {
        "missed_pii_summary": dict(missed_pii_summary),
        "partially_exposed_summary": dict(partially_exposed_summary),
        "fully_exposed_summary": dict(fully_exposed_summary),
        "exposed_pii_examples": exposed_pii_examples,
    }

    return report

def display_exposure_report(report_data: Dict[str, Any]):
    """
    Displays the PII exposure report in the Streamlit UI.

    Args:
        report_data (Dict[str, Any]): The data generated by generate_exposure_report_data.
    """
    st.subheader("PII Exposure Summary Report")

    missed_summary = report_data.get("missed_pii_summary", {})
    partial_summary = report_data.get("partially_exposed_summary", {})
    full_summary = report_data.get("fully_exposed_summary", {})
    examples = report_data.get("exposed_pii_examples", {})

    if not any([missed_summary, partial_summary, full_summary, examples]):
        st.info("No PII exposure data to report.")
        return

    tab1, tab2, tab3, tab4 = st.tabs(["Missed PII", "Partially Exposed", "Fully Exposed", "Exposed Data Examples"])

    with tab1:
        st.markdown("#### Summary of Missed PII")
        st.write("PII entities that were successfully anonymized or otherwise not detected as exposed.")
        if missed_summary:
            df_missed = pd.DataFrame(missed_summary.items(), columns=['PII Type', 'Count of Records'])
            st.dataframe(df_missed, use_container_width=True)
        else:
            st.success("No PII was categorized as missed in the analysis.")

    with tab2:
        st.markdown("#### Summary of Partially Exposed PII")
        st.write("PII entities that were found to be partially exposed in the anonymized text.")
        if partial_summary:
            df_partial = pd.DataFrame(partial_summary.items(), columns=['PII Type', 'Count of Records'])
            st.dataframe(df_partial, use_container_width=True)
        else:
            st.success("No PII was partially exposed.")
            
    with tab3:
        st.markdown("#### Summary of Fully Exposed PII")
        st.write("PII entities that were found to be fully exposed in the anonymized text.")
        if full_summary:
            df_full = pd.DataFrame(full_summary.items(), columns=['PII Type', 'Count of Records'])
            st.dataframe(df_full, use_container_width=True)
        else:
            st.success("No PII was fully exposed.")

    with tab4:
        st.markdown("#### Examples of Exposed PII Data")
        st.write("This section lists one example for each type of PII entity that was found to be exposed (either partially or fully).")
        if examples:
            for pii_type, example_data in examples.items():
                with st.expander(f"Example of exposed **{pii_type}** (Exposure Type: {example_data['type']})"):
                    st.text_input("Exposed Value", value=example_data['text'], disabled=True, key=f"exposed_val_{pii_type}")
                    st.text_area("Original Context", value=example_data['context'], height=100, disabled=True, key=f"exposed_ctx_{pii_type}")
        else:
            st.success("No examples of exposed PII to show.")
            st.json(exposure_examples["full"]["detections"])

    if exposure_examples["partial"]:
        with st.expander("Example of Partially Exposed PII", expanded=False):
            st.write("**Original Text:**")
            st.code(exposure_examples["partial"]["original"], language=None)
            st.write("**Anonymized Text (Problematic):**")
            st.code(exposure_examples["partial"]["anonymized"], language=None)
            st.write("**Detected PII:**")
            st.json(exposure_examples["partial"]["detections"])
            
    if exposure_examples["missed"]:
        with st.expander("Example of Missed PII", expanded=False):
            st.write("**Original Text:**")
            st.code(exposure_examples["missed"]["original"], language=None)
            st.write("**Anonymized Text (Problematic):**")
            st.code(exposure_examples["missed"]["anonymized"], language=None)
            st.write("**Detected PII (Incomplete):**")
            st.json(exposure_examples["missed"]["detections"])

    if not any(exposure_examples.values()):
        st.success("No exposure examples found to display.")

